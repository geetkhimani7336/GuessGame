{"version":3,"sources":["TotalScore.js","Working.js","Pics/guess_pic.gif","FrontPagee.js","HowPlay.js","App.js","reportWebVitals.js","index.js"],"names":["TotalScore","props","className","score","Working","Answer","sum","history","useHistory","count","interval","useState","seconds","setSeconds","Value","useRef","setShow","flag","setflag","ques","setQues","summ","setsumm","hide","sethide","useEffect","setInterval","num","Math","floor","random","round","clearInterval","console","log","onClick","e","push","ref","type","id","placeholder","toast","success","error","warning","preventDefault","current","value","parseInt","FrontPagee","src","guess_pic","style","fontSize","marginBottom","HowPlay","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d55483b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./TotalScore.css\"\r\n\r\nfunction TotalScore(props) {\r\n    return (\r\n        <div className=\"score_section\">\r\n            <div className=\"tts\">\r\n                <div className=\"scored_title\">\r\n                    <span> Your score</span>\r\n                    <span> Score</span>\r\n                </div >\r\n                <div className=\"scored_value\">\r\n                    <span className=\"valuee\"> {props.score}/10</span>\r\n                    <span> 10</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TotalScore;\r\n\r\n\r\n// {/* <h5 onClick={e => history.push('/variety')} > See more </h5> */ }\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport \"./Working.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TotalScore from \"./TotalScore.js\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nfunction Working() {\r\n\r\n  const history = useHistory();\r\n  var count = 0;\r\n  var Answer;\r\n  var sum;\r\n  var interval = 0;\r\n  const value = 0;\r\n  const [seconds, setSeconds] = useState();\r\n  const Value = useRef(null);\r\n  const [show, setShow] = useState(0);\r\n  const [flag, setflag] = useState(0);\r\n  const [ques, setQues] = useState(1);\r\n  const [summ, setsumm] = useState(0);\r\n  const [hide, sethide] = useState(false);\r\n  useEffect(() => {\r\n    setSeconds(\"clear\");\r\n    sum = 0;\r\n    interval = setInterval(() => {\r\n      var num = Math.floor(Math.random() * 18) + 1;\r\n      num *= Math.round(Math.random()) ? 1 : -1;\r\n      count += 1;\r\n      if (count < 5) {\r\n        sum += num;\r\n      }\r\n\r\n      if (count === 5) {\r\n        clearInterval(interval);\r\n        setSeconds(\"?\");\r\n      }\r\n\r\n      else {\r\n        setSeconds(num);\r\n      }\r\n      console.log(sum + \":\" + count);\r\n      setsumm(sum);\r\n    }, 1000)\r\n  }, [ques])\r\n\r\n  const Check = (e) => {\r\n    e.preventDefault()\r\n    Answer = Value.current.value;\r\n    setShow(Answer);\r\n    console.log(\"you typed\");\r\n    console.log(typeof (Answer));\r\n    console.log(\"setsum is\");\r\n    console.log(typeof (summ));\r\n    if (ques != 10) {\r\n      if (parseInt(Answer) === parseInt(summ)) {\r\n        setflag(flag + 1)\r\n        // sum = 0;\r\n        count = 0;\r\n        console.log(\"hello you are inside\");\r\n      }\r\n      setQues(ques + 1)\r\n    }\r\n    else {\r\n      setSeconds(\"End\")\r\n      toast.success(\"Game Completed see Your Score Card\")\r\n    }\r\n  }\r\n  const Restart = () => {\r\n    setQues(1);\r\n    setflag(0);\r\n  }\r\n  const ScoreCheck = () => {\r\n    if (ques === 10) {\r\n      sethide(true);\r\n      if (flag >= 7) {\r\n        toast.success(\"Congo Buddy\");\r\n      }\r\n      else {\r\n        toast.error(\"Your Score is Low, You can do better\")\r\n      }\r\n    }\r\n    else {\r\n      toast.warning(\"Warning : Complete All 10 Questions\")\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className=\"process_container\">\r\n      <ArrowBackIcon onClick={e => history.push('/')} className=\"Arrows1\" />\r\n      <div className=\"sectionn\">\r\n        <div className=\"process\">\r\n          <h1 className=\"heading_tag\"> Ques no {ques}</h1>\r\n          <div className=\"app_baground\">\r\n            <h1>{seconds}</h1>\r\n          </div>\r\n          <input ref={Value} type=\"text\" id=\"mytext\" placeholder=\"Your Answer\" />\r\n          <div className=\"test\">\r\n            <button className=\"button_inside\" onClick={ScoreCheck}>View Score Card</button>\r\n            <button className=\"button_inside\" onClick={Check}>Proceed to Next</button>\r\n          </div>\r\n          {/* <p>Answer:</p>\r\n        <p>{flag}</p> */}\r\n        </div>\r\n        {\r\n          hide ?\r\n            <div className=\"score__result\">\r\n              <div>\r\n                <TotalScore score={flag} />\r\n              </div>\r\n              <div className=\"button_section\">\r\n                <button className=\"button_inside score_btn\" onClick={Restart}>Restart</button>\r\n                <button className=\"button_inside score_btn\" onClick={() => sethide(false)}>Hide</button>\r\n              </div>\r\n            </div>\r\n            : null\r\n        }\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Working;","export default __webpack_public_path__ + \"static/media/guess_pic.6a23ddc9.gif\";","import React from 'react'\r\nimport './FrontPagee.css'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport guess_pic from \"./Pics/guess_pic.gif\";\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nfunction FrontPagee() {\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"Front_page\">\r\n            <div className=\"heading_section\">\r\n                <img className=\"image_img\" src={guess_pic} />\r\n                <span className=\"heading_part\">Guess sum game</span>\r\n                <SportsEsportsIcon className=\"icon_part\" style={{ fontSize: \"60px\", marginBottom: \"-15px\" }} />\r\n            </div>\r\n            <button className=\"btnn button_1\" onClick={e => history.push('/process')}>Start Game</button>\r\n            <button className=\"btnn button_1\" onClick={e => history.push('/playhow')}>How to Play?</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FrontPagee","import React from 'react';\r\nimport \"./HowPlay.css\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { useHistory } from \"react-router-dom\";\r\nfunction HowPlay() {\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            <ArrowBackIcon onClick={e => history.push('/')} className=\"Arrows\" />\r\n            <div className=\"sectionss\">\r\n                <h1 className=\"headerr_section\"> - How To play This Game ?</h1>\r\n                <p className=\"paragraphh_section\"> On Starting the game You will get some numbers. You have to sum all the numbers and then you have to insert your Answer in input field, if correct you will get 1 point for each Questions. you have two options first is View Score Card (To get your Total score at the end of Game) and Second is Proceed to Next(go to Next Question). </p>\r\n                <h1 className=\"headerr_section\"> - How many Questions are in the Game?</h1>\r\n                <p className=\"paragraphh_section\">There are 10 Questions, each Question if Correct You will get 1 point for each.</p>\r\n                <h1 className=\"headerr_section\"> - Example?</h1>\r\n                <p className=\"paragraphh_section\">On Starting the Game you will Get the numbers Like :</p>\r\n                <p className=\"example_section\">5  -12  4  23</p>\r\n                <p className=\"paragraphh_section\">Where as we know that,</p>\r\n                <p className=\"example_section_1\">5 is +ve number i.e +5 </p>\r\n                <p className=\"example_section_1\">-12 is -ve number i.e -12 </p>\r\n                <p className=\"paragraphh_section\"> So The Sum of all the number is :</p>\r\n                <p className=\"example_section_1\">+5-12+4+23 = 20</p>\r\n                <p className=\"paragraphh_section\"> Put that Answer in input field if correct you will get 1 point else 0 point</p>\r\n                <p className=\"paragraphh_section\">then proceed to next Question.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HowPlay\r\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route }\n  from \"react-router-dom\";\nimport TotalScore from \"./TotalScore\"\nimport Working from \"./Working.js\"\nimport FrontPagee from \"./FrontPagee.js\"\nimport HowPlay from './HowPlay';\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/process\">\n            <Working />\n          </Route>\n          <Route exact path=\"/score\">\n            <TotalScore />\n          </Route>\n          <Route exact path=\"/playhow\">\n            <HowPlay />\n          </Route>\n          <Route exact path=\"/\">\n            <FrontPagee />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}